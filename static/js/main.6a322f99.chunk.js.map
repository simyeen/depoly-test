{"version":3,"sources":["lib/styles/palette.js","components/common/Button.js","components/common/Responsive.js","components/common/Header.js","modules/loading.js","lib/createRequestSaga.js","lib/api/client.js","lib/api/auth.js","modules/user.js","containers/common/HeaderContainer.js","pages/PostListPage.js","components/auth/AuthTemplate.js","modules/auth.js","components/auth/AuthForm.js","containers/auth/LoginForm.js","pages/LoginPage.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","components/common/Lotte.js","components/write/WriteActionButtons.js","components/write/Editor.js","modules/write.js","lib/api/write.js","containers/write/EditorContainer.js","components/write/TagBox.js","containers/write/TagBoxContainer.js","pages/WritePage.js","pages/PostPage.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["palette","gray","cyan","buttonStyle","css","props","fullWidth","StyledButton","styled","button","StyledLink","Link","Button","to","ResponsiveBlock","div","Responsive","children","rest","HeaderBlock","Wrapper","Spacer","UserInfo","Header","user","onLogout","console","log","className","username","onClick","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","type","payload","createRequestActionTypes","createRequestSaga","request","SUCCESS","FAILURE","action","put","call","response","data","error","client","axios","create","logout","post","logoutSaga","userSaga","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","authAPI","takeLatest","checkError","HeaderContainer","dispatch","useDispatch","useSelector","PostListPage","AuthTemplateBlock","WhiteBox","AuthTemplate","authSaga","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","initializeForm","register","password","login","registerSaga","loginSaga","initialState","passwordConfirm","auth","authError","produce","draft","ErrorMessage","AuthFormBlock","StyledInput","input","Footer","ButtonWithMarginTop","textMap","AuthForm","onChange","onSubmit","text","autoComplete","name","placeholder","withRouter","history","useState","setError","useEffect","push","setItem","JSON","stringify","target","preventDefault","LoginPage","status","includes","RegisterPage","Lotte","Helmet","src","background","speed","style","width","height","loop","autoplay","React","Component","WriteActionButtonsBlock","WriteActionButtons","onCancel","onPublish","EditorBlock","TitleInput","QuillWrapper","Editor","onChangeField","title","quillElement","body","useRef","quillInstance","current","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","ref","writeSaga","INITIALIZE","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","initialize","writePostSaga","tags","postError","write","EditorContainer","useCallback","TagBoxBlock","TagForm","Tag","TagListBlock","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","tag","nextTags","onRemove","filter","t","trim","TagList","memo","map","TagItem","TagBoxContainer","WritePage","PostPage","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a322f99.chunk.js","sourcesContent":["// source: http://yeun.github.io/open-color/\r\n\r\nconst palette = {\r\n  gray: [\r\n    '#f8f9fa',\r\n    '#f1f3f5',\r\n    '#e9ecef',\r\n    '#dee2e6',\r\n    '#ced4da',\r\n    '#adb5bd',\r\n    '#868e96',\r\n    '#495057',\r\n    '#343a40',\r\n    '#212529',\r\n  ],\r\n\r\n  cyan: [\r\n    '#e3fafc',\r\n    '#c5f6fa',\r\n    '#99e9f2',\r\n    '#66d9e8',\r\n    '#3bc9db',\r\n    '#22b8cf',\r\n    '#15aabf',\r\n    '#1098ad',\r\n    '#0c8599',\r\n    '0b7285',\r\n  ],\r\n};\r\n\r\nexport default palette;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst buttonStyle = css`\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0.25rem 1rem;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  background: ${palette.gray[8]};\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      font-size: 1.125rem;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[5]};\r\n      &:hover {\r\n        background: ${palette.cyan[4]};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.to ? ( //to 를 가지면 css를 가지는 Link component로 나온다.\r\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} /> // 임의의 props\r\n  ) : (\r\n    <StyledButton {...props} />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ResponsiveBlock = styled.div`\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 768px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => {\r\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\nimport Responsive from './Responsive';\r\n\r\nconst HeaderBlock = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  background: white;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\r\n`;\r\n\r\nconst Wrapper = styled(Responsive)`\r\n  height: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  .logo {\r\n    font-size: 1.125rem;\r\n    font-weight: 800;\r\n    letter-spacing: 2px;\r\n  }\r\n  .right {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  height: 4rem;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  font-weight: 800;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst Header = ({ user, onLogout }) => {\r\n  return (\r\n    <>\r\n      {console.log(user)}\r\n      <HeaderBlock>\r\n        <Wrapper>\r\n          <div className=\"logo\">MOAT</div>\r\n          <div className=\"right\">\r\n            {user ? (\r\n              <div className=\"right\">\r\n                <UserInfo>{user.username}</UserInfo>\r\n                <Button onClick={onLogout}>로그아웃</Button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"right\">\r\n                <Button to=\"/login\">로그인</Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Wrapper>\r\n      </HeaderBlock>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  (requestType) => requestType,\r\n);\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  (requestType) => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, { payload: type }) => ({\r\n      ...state,\r\n      [type]: true,\r\n    }),\r\n    [FINISH_LOADING]: (state, { payload: type }) => ({\r\n      ...state,\r\n      [type]: true,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../modules/loading';\r\n\r\nexport const createRequestActionTypes = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request) {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function* (action) {\r\n    yield put(startLoading(type));\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: e,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type));\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","import client from './client';\r\n\r\nexport const login = ({ username, password }) =>\r\n  client.post('/api/auth/login', { username, password });\r\n\r\nexport const registr = ({ username, password }) =>\r\n  client.post('/api/auth/register', { username, password });\r\n\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\nexport const logout = () => client.post('/api/auth/logout');\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, (user) => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\n//logout\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state, action) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Header from '../../components/common/Header';\r\nimport { logout } from '../../modules/user';\r\n\r\nconst HeaderContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  return <Header user={user} onLogout={onLogout} />;\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../containers/common/HeaderContainer';\r\n\r\nconst PostListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <div>안녕하세요.</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostListPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: ${palette.gray[8]};\r\n\r\n  display: flex;\r\n  flex-direction: colunm;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n  .logo-area {\r\n    display: block;\r\n    padding-bottom: 2rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    letter-spacing: 2px;\r\n  }\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 360px;\r\n  background: white;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <WhiteBox>\r\n        <div className=\"logo-area\">\r\n          <Link to=\"/\">MOAT</Link>{' '}\r\n        </div>\r\n        {children}\r\n      </WhiteBox>\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport produce from 'immer';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n  'auth/REGISTER',\r\n);\r\n\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n  'auth/LOGIN',\r\n);\r\n\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, //register or login\r\n    key, // username, password, passwordConfirm\r\n    value, // input값\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form); //register or login 선택하기.\r\n\r\nexport const register = createAction(REGISTER, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\n\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.registr);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n\r\n  auth: null,\r\n  authError: null,\r\n};\r\n\r\nconst auth = handleActions(\r\n  {\r\n    // [CHANGE_FIELD]: (state, { payload: { form, key, value } }) => ({\r\n    //   ...state,\r\n    //   form: {\r\n    //     ...state.form,\r\n    //     [key]: value,\r\n    //   },\r\n    // }),\r\n\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      authError: null,\r\n    }),\r\n\r\n    [REGISTER_SUCCESS]: (state, action) => ({\r\n      ...state,\r\n      auth: action.payload,\r\n      authError: null,\r\n    }),\r\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from '../../lib/styles/palette';\r\nimport Button from '../common/Button';\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-size: 0.825rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${palette.gray[8]};\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[5]};\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    color: $oc-teal-7;\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${palette.gray[6]};\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: ${palette.gray[9]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst AuthForm = ({ type, form, onChange, onSubmit, error }) => {\r\n  const text = textMap[type];\r\n\r\n  return (\r\n    <AuthFormBlock>\r\n      {console.log(form)}\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <StyledInput\r\n          autoComplete=\"username\"\r\n          name=\"username\"\r\n          placeholder=\"아이디\"\r\n          onChange={onChange}\r\n          value={form.username}\r\n        />\r\n        <StyledInput\r\n          autoComplete=\"new-password\"\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          type=\"password\"\r\n          onChange={onChange}\r\n          value={form.password}\r\n        />\r\n        {type === 'register' && (\r\n          <StyledInput\r\n            autoComplete=\"new-password\"\r\n            name=\"passwordConfirm\"\r\n            placeholder=\"비밀번호 확인\"\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            value={form.passwordConfirm}\r\n          />\r\n        )}\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <ButtonWithMarginTop cyan fullWidth>\r\n          {text}\r\n        </ButtonWithMarginTop>\r\n      </form>\r\n      <Footer>\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeField, initializeForm, login } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { check } from '../../modules/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  //여기서의 form은 login : {username, password를 의미한다.}\r\n\r\n  //input 변경 이벤트 핸들러\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'login',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { username, password } = form;\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeForm('login'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (authError) {\r\n      console.log('오류 발생');\r\n      console.log(authError);\r\n      setError('로그인 실패');\r\n      return;\r\n    }\r\n    if (auth) {\r\n      console.log('로그인 성공');\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/');\r\n      try {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } catch (e) {\r\n        console.log('localStorage is not working');\r\n      }\r\n    }\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport LoginForm from '../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { changeField, initializeForm, register } from '../../modules/auth';\r\nimport { check } from '../../modules/user';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.register,\r\n\r\n    authError: auth.authError,\r\n    auth: auth.auth,\r\n\r\n    user: user.user,\r\n  }));\r\n\r\n  //인풋 변경 이벤트 핸들러\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'register',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  // 폼 등록 이벤트 핸들러\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password, passwordConfirm } = form;\r\n    if ([username, password, passwordConfirm].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n\r\n    if (password !== passwordConfirm) {\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      dispatch(changeField({ form: 'register', key: password, value: '' }));\r\n      dispatch(\r\n        changeField({ form: 'register', key: passwordConfirm, value: '' }),\r\n      );\r\n      return;\r\n    }\r\n    dispatch(register({ username, password }));\r\n  };\r\n\r\n  // 컴퍼터넌트가 청므 렌더링 될 때 form을 초기화한다.\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n  }, [dispatch]);\r\n\r\n  //회원 가입 성공/실패 처리\r\n  useEffect(() => {\r\n    if (authError) {\r\n      if (authError.response.status === 409) {\r\n        setError('이미 존재하는 계정명입니다.');\r\n        return;\r\n      }\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n\r\n    if (auth) {\r\n      console.log('회원가입 성공');\r\n      console.log('auth');\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/');\r\n      try {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } catch (e) {\r\n        console.log('localStorage is not working');\r\n      }\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport RegisterForm from '../containers/auth/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Player, Controls } from '@lottiefiles/react-lottie-player';\r\n\r\nclass Lotte extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"application\">\r\n        Lottie\r\n        <Helmet>\r\n          <script src=\"https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js\"></script>\r\n          <Player\r\n            src=\"https://assets1.lottiefiles.com/private_files/lf30_zmdmlimu.json\"\r\n            background=\"transparent\"\r\n            speed=\"1\"\r\n            style={{ width: '52px', height: '28px' }}\r\n            loop\r\n            autoplay\r\n          ></Player>\r\n        </Helmet>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lotte;\r\n\r\n//   <div>\r\n//   <script src=\"https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js\"></script>\r\n//   <lottie-player\r\n//     src=\"https://assets1.lottiefiles.com/private_files/lf30_zmdmlimu.json\"\r\n//     background=\"transparent\"\r\n//     speed=\"1\"\r\n//     style={'width: 52px; height: 28px;'}\r\n//     loop\r\n//     autoplay\r\n//   ></lottie-player>\r\n// </div>\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\n\r\nconst WriteActionButtonsBlock = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 3rem;\r\n  button + button {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst WriteActionButtons = ({ onCancel, onPublish }) => {\r\n  return (\r\n    <WriteActionButtonsBlock>\r\n      <StyledButton cyan onClick={onPublish}>\r\n        포스트등록\r\n      </StyledButton>\r\n      <StyledButton onClick={onCancel}>취소</StyledButton>\r\n    </WriteActionButtonsBlock>\r\n  );\r\n};\r\n\r\nexport default WriteActionButtons;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding-top: 5rem;\r\n  padding-bottom: 5rem;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 3rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[4]};\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ onChangeField, title, body }) => {\r\n  const quillElement = useRef(null); // Quill을 이용한 DivElement를 성정한다.\r\n  const quillInstance = useRef(null); // Quill을 이용한 인스턴스를 설정.\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '내용을 작성하세요...',\r\n      modules: {\r\n        toolbar: [\r\n          [{ header: '1' }, { header: '2' }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ list: 'orderd' }, { list: 'bullet' }],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n        ],\r\n      },\r\n    });\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  const onChangeTitle = (e) => {\r\n    onChangeField({ key: 'title', value: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <EditorBlock>\r\n      <TitleInput\r\n        placeholder=\"제목을 입력하세요.\"\r\n        onChange={onChangeTitle}\r\n        value={title}\r\n      />\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as postAPI from '../lib/api/write';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst INITIALIZE = 'write/INITIALIZE';\r\nconst CHANGE_FIELD = 'write/INITIALIZE';\r\n\r\nconst [\r\n  WRITE_POST,\r\n  WRITE_POST_SUCCESS,\r\n  WRITE_POST_FAILURE,\r\n] = createRequestActionTypes('write/WRITE_POST');\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\r\n  title,\r\n  body,\r\n  tags,\r\n}));\r\n\r\n//사가 생성\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nexport function* writeSaga() {\r\n  yield takeLatest(WRITE_POST, writePostSaga);\r\n}\r\n\r\nconst initialState = {\r\n  title: '',\r\n  body: '',\r\n  tags: [],\r\n\r\n  post: null,\r\n  postError: null,\r\n};\r\n\r\n//각 payload들은 매개변수, 즉 넣어줄 값이기 때문에,\r\n//initialState의 포맷을 참조로 해준다.\r\nconst write = handleActions(\r\n  {\r\n    [INITIALIZE]: () => initialState,\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value,\r\n    }),\r\n    [WRITE_POST]: (state) => ({\r\n      ...state,\r\n      post: null,\r\n      postError: null,\r\n    }),\r\n    [WRITE_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post: post, //혹은 그냥 post만 적고 postError부분 삭제해도 무관.\r\n      postError: null,\r\n    }),\r\n    [WRITE_POST_FAILURE]: (state, { payload: postError }) => ({\r\n      ...state,\r\n      post: null,\r\n      postError: postError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default write;\r\n","import client from './client';\r\n\r\nexport const writePost = ({ title, body, tags }) =>\r\n  client.post('/api/posts', { title, body, tags });\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Editor from '../../components/write/Editor';\r\nimport { changeField, initialize } from '../../modules/write';\r\n\r\nconst EditorContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { title, body } = useSelector((write) => ({\r\n    title: write.title,\r\n    body: write.body,\r\n  }));\r\n\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(initialize());\r\n  }, [dispatch]);\r\n\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default EditorContainer;\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst TagBoxBlock = styled.div`\r\n  width: 100%;\r\n  border-top: 1px solid ${palette.gray[2]};\r\n  padding-top: 2rem;\r\n\r\n  h4 {\r\n    color: ${palette.gray[8]};\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  width: 256px;\r\n  border: 1px solid ${palette.gray[9]};\r\n  input,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    flex: 1;\r\n    min-width: 0;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    border: none;\r\n    background: ${palette.gray[8]};\r\n    color: white;\r\n    font-weight: bold;\r\n    &:hover {\r\n      background: ${palette.gray[6]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  margin-right: 0.5rem;\r\n  color: ${palette.gray[6]};\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst TagListBlock = styled.div`\r\n  display: flex;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst TagBox = ({ tags, onChangeTags }) => {\r\n  const [input, setInput] = useState('');\r\n  const [localTags, setLocalTags] = useState([]);\r\n\r\n  const insertTag = useCallback(\r\n    (tag) => {\r\n      if (!tag) return;\r\n      if (localTags.includes(tag)) return;\r\n      const nextTags = [...localTags, tag];\r\n      setLocalTags(nextTags); //렌더링을 위함.\r\n      onChangeTags(nextTags); //스토어 업데이를 위함.\r\n    },\r\n    [localTags, onChangeTags],\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    (tag) => {\r\n      const nextTags = localTags.filter((t) => t !== tag);\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags],\r\n  );\r\n\r\n  const onChange = useCallback((e) => {\r\n    setInput(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      insertTag(input.trim());\r\n      setInput('');\r\n    },\r\n    [input, insertTag],\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLocalTags(tags);\r\n  }, [tags]);\r\n\r\n  const TagList = React.memo(({ tags, onRemove }) => (\r\n    <TagListBlock>\r\n      {tags.map((tag) => (\r\n        <TagItem key={tag} tag={tag} onRemove={onRemove} />\r\n      ))}\r\n    </TagListBlock>\r\n  ));\r\n\r\n  const TagItem = React.memo(({ tag, onRemove }) => (\r\n    <Tag\r\n      onClick={() => {\r\n        onRemove(tag);\r\n      }}\r\n    >\r\n      #{tag}\r\n    </Tag>\r\n  ));\r\n\r\n  return (\r\n    <TagBoxBlock>\r\n      <h4>태그</h4>\r\n      <TagForm onSubmit={onSubmit}>\r\n        <input\r\n          placeholder=\"태그를 입력하세요\"\r\n          value={input}\r\n          onChange={onChange}\r\n        />\r\n        <button type=\"submit\">추가</button>\r\n      </TagForm>\r\n      <TagList tags={localTags} onRemove={onRemove} />\r\n    </TagBoxBlock>\r\n  );\r\n};\r\n\r\nexport default TagBox;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TagBox from '../../components/write/TagBox';\r\nimport { changeField } from '../../modules/write';\r\n\r\nconst TagBoxContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { tags } = useSelector(({ write }) => ({ tags: write.tags }));\r\n\r\n  const onChangeTags = useCallback(\r\n    (nextTags) => {\r\n      dispatch(\r\n        changeField({\r\n          key: 'tags',\r\n          value: nextTags,\r\n        }),\r\n      );\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return <TagBox onChangeTags={onChangeTags} tags={tags} />;\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from 'react';\r\nimport Responsive from '../components/common/Responsive';\r\nimport Lotte from '../components/common/Lotte';\r\nimport WriteActionButtons from '../components/write/WriteActionButtons';\r\nimport EditorContainer from '../containers/write/EditorContainer';\r\nimport TagBoxContainer from '../containers/write/TagBoxContainer';\r\n\r\nconst WritePage = () => {\r\n  return (\r\n    <Responsive>\r\n      <EditorContainer />\r\n      <TagBoxContainer />\r\n      <WriteActionButtons />\r\n      <Lotte />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default WritePage;\r\n","import React from 'react';\r\n\r\nconst PostPage = () => {\r\n  return <div>포스트 읽기</div>;\r\n};\r\n\r\nexport default PostPage;\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PostListPage from './pages/PostListPage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport WritePage from './pages/WritePage';\nimport PostPage from './pages/PostPage';\n\nconst App = () => {\n  return (\n    <>\n      <Route component={PostListPage} path={['/@:username', '/']} exact />\n      <Route component={LoginPage} path=\"/login\" />\n      <Route component={RegisterPage} path=\"/register\" />\n      <Route component={WritePage} path=\"/write\" />\n      <Route component={PostPage} path=\"/@:username/:postId\" />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { all } from 'redux-saga/effects';\r\nimport { combineReducers } from 'redux';\r\nimport auth, { authSaga } from './auth';\r\nimport loading from './loading';\r\nimport user, { userSaga } from './user';\r\nimport write, { writeSaga } from './write';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  loading,\r\n  user,\r\n  write,\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), writeSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport { tempSetUser, check } from './modules/user';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) return;\n\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}